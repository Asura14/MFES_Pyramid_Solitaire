class SolitaireTest is subclass of MyTestCase

types

values

instance variables
	private pyramid: Pyramid_Solitaire := new Pyramid_Solitaire();
	
operations
	private testInitPyramid: () ==> ()
	testInitPyramid() ==
	(
		assertEqual(false, pyramid.getGameOver()); 
		assertEqual(false, pyramid.getBoardOver()); 
	);
	
	private testRemoveFromBoard: () ==> ()
	testRemoveFromBoard() == 
	(
		dcl index: nat := pyramid.getBoard().getCardIndex(1, 1);
		assertTrue(pyramid.getBoard().cards(index).getValue() > 0);
		pyramid.getBoard().removeCard(1, 1);
		assertTrue(pyramid.getBoard().cards(index).getValue() = 0);
	);
	
	private testRemoveFromHand: () ==> ()
	testRemoveFromHand() == 
	(
		dcl tempCard: Card := pyramid.getHand().getTopCard();
		assertTrue(tempCard.getValue() > 0);
		pyramid.getHand().removeCard();
		assertTrue(pyramid.getHand().getTopCard().getValue() <> tempCard.getValue());
	);
	
	private testNextCardFromHand: () ==> ()
	testNextCardFromHand() == 
	(
		dcl tempCard: Card := pyramid.getHand().getTopCard();
		assertTrue(tempCard.getValue() > 0);
		IO`println(tempCard);
		pyramid.getHand().nextCard();
		IO`println(pyramid.getHand().getTopCard());
		assertTrue(pyramid.getHand().getTopCard().getValue() <> tempCard.getValue() or pyramid.getHand().getTopCard().getSuit() <> tempCard.getSuit());
	);
	
	public runTests: () ==> ()
	runTests() ==
	(
		testInitPyramid();
		testRemoveFromBoard();
		testRemoveFromHand();
		testNextCardFromHand();
	);

functions

traces

end SolitaireTest