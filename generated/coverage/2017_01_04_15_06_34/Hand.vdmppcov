class Hand

types
-- TODO Define types here

values
-- TODO Define values here

instance variables
-- TODO Define instance variables here
public cards: seq of Card := [];

operations
public Hand: Deck ==> Hand
			Hand(deck) == (
				cards := []; 
				for i = 29 to 52 do
				(
					cards := cards ^ [deck.cards(i)];
				);
				return self;
			)
post len cards = 24;

pure public getTopCard : () ==> Card
	getTopCard() ==	return hd cards
	pre len cards > 0;
	
public nextCard : () ==> ()
	nextCard() == cards := [hd cards] ^ tl cards
	pre len cards > 1
	post len cards = len cards~;
	
public removeCard : () ==> ()
	removeCard() == cards := tl cards
	pre len cards > 0
	post len cards = (len cards~) - 1;
	
public selectCard : () ==> Card
	selectCard() == return hd cards
	pre len cards > 0;
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Hand