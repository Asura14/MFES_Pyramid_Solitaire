class Card

types
	public CardID = nat;
	
values
	
instance variables
	id : nat;
	suit : char;
	value : nat;

operations
	public Card : nat * char * nat ==> Card
		Card(cardid, nsuit, nvalue) ==
		   (
		   		id := cardid;
		      suit := nsuit;
		      value := nvalue;
		      
		      return self
		   )
	pre (nvalue >= 0 and nvalue <= 13);
	
	public pure getID : () ==> CardID
		getID() == return id;
	
	public pure getSuit : () ==> char
		getSuit() == return suit;
	
	public pure getValue : () ==> nat
		getValue() == return value;

functions

traces

end Card