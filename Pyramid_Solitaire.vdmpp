class Pyramid_Solitaire

types

values

instance variables
	private deck: Deck;
	private board: Board;
	private hand: Hand;
	private gameOver: bool := false;
	private boardOver: bool := false;

operations

	public Pyramid_Solitaire : () ==> Pyramid_Solitaire
		Pyramid_Solitaire() ==
			(
				deck := new Deck();
				deck.shuffleDeck();
				board := new Board(deck);
				hand := new Hand(deck);
			);
	
	public gameCycle : () ==> ()
		gameCycle() == 
		(
		while (gameOver = false) do 
			(
				
				
				boardOver := isBoardOver();
				--gameOver := isGameOver();
			)
		);
		
	public selectCard : nat * nat ==> Card
		selectCard(row, col) == (
			if row = 0 then (
				return hand.selectCard();
			);
			if row > 0 then (
				return board.selectCard(col, row); 
			);
			return new Card(0,'N',0)
		);
		
	public isBoardOver : () ==> bool
		isBoardOver() == (
			if board.cards(1) = new Card(0,'N',0) then return true
			else return false
		)
	pre len board.cards = 28;
		
	public isGameOver : int * int ==> bool
		isGameOver(row, col) == (
			if row = -1 and col = -1 then return true
			else return false
		);
		
	public pure getDeck : () ==> Deck
		getDeck() == return deck;
		
	public pure getBoard : () ==> Board
		getBoard() == return board;
		
	public pure getHand : () ==> Hand
		getHand() == return hand;
	
	public pure getGameOver : () ==> bool
	getGameOver() == return gameOver;
	
	public pure getBoardOver : () ==> bool
	getBoardOver() == return boardOver;

functions

traces

end Pyramid_Solitaire